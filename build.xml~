<?xml version="1.0"?>
<project name="CellularAutomata" default="all" basedir=".">

<!-- Project Properties -->
	<property name="build.dir" location="build"/>
	<property name="build.prod.dir" location="${build.dir}/prod"/>
	<property name="build.test.dir" location="${build.dir}/test"/>
	<property name="build.doc.dir" location="${build.dir}/doc"/>
	<property name="bin.dir" location="bin"/>
	<property name="doc.dir" location="doc"/>
	<property name="javadoc.dir" location="doc/javadoc"/>
	<property name="dist.dir" location="dist"/>
  <property name="lib.dir" location="lib"/>
  <property name="output.dir" location="output"/>
  <property name="output.testing.dir" location="${output.dir}/testing"/>
	<property name="src.dir" location="src"/>
	<property name="test.dir" location="test"/>
	
	<property name="project.name" value="Cellular Automata" />
	<property name="jarname" value="CellularAutomata.jar" />
	<property name="runclass" value="org.simonwells.CellularAutomata.CellularAutomataApp" />
	
<!--	<property name="scripts.lib.classpath.string" refid="scripts.lib.classpath"/> -->
	
<!-- Codeflux_Utils Specific Targets -->

    <!-- Clean-up All Directories -->
    <target name="clean">
        <delete dir="${build.prod.dir}"/>
        <delete dir="${build.test.dir}"/>
        <delete dir="${build.doc.dir}"/>
	</target>

	<!-- Setup Target Directories -->
	<target name="init" depends="clean">
		<mkdir dir="${build.prod.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${build.doc.dir}" />
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${build.prod.dir}">
			<classpath refid= "classpath" />
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
		<javac srcdir="${test.dir}" destdir="${build.test.dir}">
			<classpath>
				<fileset dir="${dist.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${build.prod.dir}">
					<include name="**/*.class" />
				</fileset>
				<fileset dir="${build.test.dir}">
					<include name="**/*.class" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<!-- Create Jar -->
	<target name="jar" depends="compile">
		<jar jarfile="${dist.dir}/${jarname}" basedir="${build.prod.dir}">
			<manifest>
				<attribute name="Main-Class" value="${runclass}"/>
			</manifest>
		</jar>
	</target>
	
	<!-- Common Classpath 
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>-->
	
		<path id="classpath">
		<fileset dir="${dist.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${build.prod.dir}">
					<include name="**/*.class" />
				</fileset>
				<fileset dir="${build.test.dir}">
					<include name="**/*.class" />
				</fileset>
		<pathelement location="classes" />
	<!--	<dirset dir="${build.dir}">
			<include name="${build.prod.dir}/**/*" />
			<include name="${build.test.dir}/**/*" />
		</dirset>-->
	</path>
	
		<!-- Generate scripts to run the app without Ant -->
<!--	<target name="scripts" depends="jar">
		<echo file="${bin.dir}/run.sh" append="false">#!/bin/bash
java -classpath .:${dist.dir}/${jarname}:${scripts.lib.classpath.string} ${runclass}
		</echo>
		<chmod file="${bin.dir}/run.sh" perm="744" />
	</target>-->
	
	<!-- Get the fileset for the libraries to be included when building the 
			execute string for the external scripts -->
	<path id="scripts.lib.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="test">
		<junit printsummary="yes" fork="yes" haltonerror="no" haltonfailure="no">
		<classpath>
			<pathelement location="${build.prod.dir}"/>
			<pathelement location="${build.test.dir}"/>
			</classpath>
		<formatter type="plain" />
		<formatter type="xml" />
		<test todir="${output.testing.dir}" name="org.simonwells.CellularAutomata.CellTest"/>
		<test todir="${output.testing.dir}" name="org.simonwells.CellularAutomata.PatternTest"/>
		</junit>
	</target>
	
	<!-- Create Java Docs -->
	<target name="doc">
		<javadoc 	
					sourcepath="${src.dir}"
					destdir="${build.doc.dir}"
					classpathref="classpath"
					author="true"
					version="true"
					use="true"
					windowtitle="${project.name} API">		
		</javadoc>
		<copy todir="${javadoc.dir}">
			<fileset dir="${build.doc.dir}/"/>
		</copy>
	</target>

	<!-- Remove Java Docs -->
    <target name="cleandoc">
    	<delete dir="${javadoc.dir}"/>
    </target>
    
    	<!-- Build All -->
    <target name="all" depends="jar">
    </target>
    
	<!-- Run the Application -->
	<target name="run" depends="jar">
		<java fork="true" classname="${runclass}">
			<classpath>
				<fileset dir="${dist.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	

    
</project>
